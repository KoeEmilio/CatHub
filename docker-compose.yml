services:
  mongo:
    image: mongo:7.0.18
    container_name: mongo
    hostname: www.atenasoficial.com   # ðŸ”¹ clave para que Mongo se detecte asÃ­
    restart: always
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    extra_hosts:
      - "www.atenasoficial.com:${PRIVATE_IP}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "${MONGO_PORT}", "--keyFile", "/data/configdb/mongodb-keyfile"]
    volumes:
      - mongo-data:/data/db
      - ./keyfile:/data/configdb
    networks:
      - igmar-net

  postgres:
    image: postgres:17.5
    container_name: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - igmar-net

  # mqtt:
  #   image: emqx:5.8.3
  #   container_name: mqtt-broker
  #   restart: always
  #   ports:
  #     - "${SOCKET_PORT}:${SOCKET_PORT}"
  #     - "${SOCKET_PORT_TLS}:${SOCKET_PORT_TLS}"
  #     - "${DASHBOARD_PORT}:${DASHBOARD_PORT}"
  #   environment:
  #     - EMQX_NODE__NAME=${EMQX_NODE__NAME}
  #     - EMQX_NODE__COOKIE=${EMQX_NODE__COOKIE}
  #     - EMQX_LOG__LEVEL=${EMQX_LOG__LEVEL}
  #     - EMQX_DASHBOARD_DEFAULT_USER__USERNAME=${EMQX_DASHBOARD_DEFAULT_USER__USERNAME}
  #     - EMQX_DASHBOARD_DEFAULT_USER__PASSWORD=${EMQX_DASHBOARD_DEFAULT_USER__PASSWORD}
  #   volumes:
  #     - emqx-data:/opt/emqx/data
  #     - emqx-etc:/opt/emqx/etc
  #     - emqx-log:/opt/emqx/log
  #   networks:
  #     - igmar-net

  mqtt:
    image: emqx:5.8.3
    container_name: mqtt-broker
    restart: always
    ports:
      - "${SOCKET_PORT}:${SOCKET_PORT}"        # e.g. 1883 (si quieres mantenerlo)
      - "${SOCKET_PORT_TLS}:${SOCKET_PORT_TLS}" # e.g. 8883 (TLS MQTT)
      - "${DASHBOARD_PORT}:${DASHBOARD_PORT}"  # dashboard (ej. 18083)
      - "8884:8884"                            # WSS (WebSocket TLS)
    environment:
      - EMQX_NODE__NAME=${EMQX_NODE__NAME}
      - EMQX_NODE__COOKIE=${EMQX_NODE__COOKIE}
      - EMQX_LOG__LEVEL=${EMQX_LOG__LEVEL}
      - EMQX_DASHBOARD_DEFAULT_USER__USERNAME=${EMQX_DASHBOARD_DEFAULT_USER__USERNAME}
      - EMQX_DASHBOARD_DEFAULT_USER__PASSWORD=${EMQX_DASHBOARD_DEFAULT_USER__PASSWORD}

      # --- Configurar SSL para el listener por defecto (8883) ---
      # - EMQX_LISTENER__SSL__DEFAULT__SSL_OPTIONS__CERTFILE=/opt/emqx/etc/certs/server.crt
      # - EMQX_LISTENER__SSL__DEFAULT__SSL_OPTIONS__KEYFILE=/opt/emqx/etc/certs/server.key

      # --- Configurar WSS en 8884 ---
      - EMQX_LISTENERS__WSS__DEFAULT__BIND=0.0.0.0:8884
      - EMQX_LISTENERS__WSS__DEFAULT__SSL__CERTFILE=/etc/letsencrypt/live/atenasoficial.com/fullchain.pem
      - EMQX_LISTENERS__WSS__DEFAULT__SSL__KEYFILE=/etc/letsencrypt/live/atenasoficial.com/privkey.pem

      # --- Opcional: desactivar WS no-TLS si no lo quieres (activa solo si necesitas) ---
      # - EMQX_LISTENER__WS__EXTERNAL=0

    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-etc:/opt/emqx/etc
      - emqx-log:/opt/emqx/log

      # Montar certs Let's Encrypt directamente (siempre prueba primero)
      - /etc/letsencrypt/live/atenasoficial.com/fullchain.pem:/opt/emqx/etc/certs/server.crt:ro
      - /etc/letsencrypt/live/atenasoficial.com/privkey.pem:/opt/emqx/etc/certs/server.key:ro

    networks:
      - igmar-net

  cathub:
    build: .
    # ports:
    #   - "${API_PORT}:${API_PORT}"
    restart: unless-stopped
    environment:
      LOG_LEVEL: info
      APP_KEY: 7Otq2phcA_g__DtX_NQLJZRQN7jxIdFa
      TZ: UTC
      PORT: ${API_PORT}
      HOST: 0.0.0.0
      NODE_ENV: development
      DB_CONNECTION: pg
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}
      DB_HOST: postgres
      DB_PORT: 5432
      MONGO_URL: ${MONGO_URL}
    volumes:
      - ./:/app
    networks:
      - igmar-net
      - frontend-net

networks:
  igmar-net:
    external: true
    driver: bridge
  
  frontend-net:
    driver: bridge

volumes:
  mongo-data:
  postgres-data:
  mqtt-data:
  emqx-data:
  emqx-etc:
  emqx-log: