services:
  mongo:
    image: mongo:7.0.18
    container_name: mongo
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile/mongodb-keyfile"]
    volumes:
      - mongo-data:/data/db
      - ./mongodb-keyfile:/etc/mongo-keyfile/mongodb-keyfile:ro
    networks:
      - igmar-net

  mongo-init-replica:
    image: mongo:7.0.18
    depends_on:
      - mongo
    entrypoint: >
      bash -c "
      sleep 5;
      mongo --host mongo -u ${MONGO_USER} -p ${MONGO_PASSWORD} --authenticationDatabase admin /scripts/init-rs.js
      "
    volumes:
      - ./scripts:/scripts
  networks:
    - igmar-net

  postgres:
    image: postgres:17.5
    container_name: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - igmar-net

  cathub:
    build: .
    ports:
      - "3333:3333"
    restart: unless-stopped
    environment:
      LOG_LEVEL: info
      APP_KEY: 7Otq2phcA_g__DtX_NQLJZRQN7jxIdFa
      TZ: UTC
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      DB_CONNECTION: pg
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_DATABASE: db_cathub
      DB_HOST: postgres
      DB_PORT: 5432
      MONGO_URL: mongodb://admin:admin123@mongo:27017/db_cathub?authSource=admin
    volumes:
      - ./:/app
    networks:
      - igmar-net

networks:
  igmar-net:
    external: true
    driver: bridge


volumes:
  mongo-data:
  postgres-data:
